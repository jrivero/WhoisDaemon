# backend sockets
upstream rws_backend  {
	server unix:/tmp/whoisd.fcgi.sock;
}

# define cache path
fastcgi_cache_path   /var/cache/nginx/fastcgi_temp/  levels=1:2
					 keys_zone=RWSDNRDCACHE:1024m
					 inactive=5m;
 
## Size Limits & Buffer Overflows
# activate if not global defined
# client_body_buffer_size  1K;
# client_header_buffer_size 1k;
# client_max_body_size 1k;
# large_client_header_buffers 2 1k;

## Timeouts
# activate if not global defined
# client_body_timeout   10;
# client_header_timeout 10;
# keepalive_timeout     5 5;
# send_timeout          10;

### Directive describes the zone, in which the session states are stored i.e. store in slimits. ###
### 1m can handle 32000 sessions with 32 bytes/session, set to 10m x 32000 session ###
# limit_conn_zone $binary_remote_addr zone=whois:10m;
 
server {
    listen   192.168.110.9:80;
    server_name  whois whois.ndev.vpn.novutec.com;

    # disable access_log default - to much traffic.
    # access_log /var/log/nginx/rwsdnrd.access.log
    
    error_log /var/log/nginx/rwsdnrd.error.log;
    
    # reject invalid requests
    if ($request_method !~ ^(GET|HEAD)$ ) {
         return 444;
    }

    ### Control maximum number of simultaneous connections for one session i.e. ###
    ### restricts the amount of connections from a single ip address ###
    # limit_conn slimits 5;

    
    # to host static files like images/css for html output
    root /var/www/rwsdnrd;
    
    # set default format to html
    set $response_format "html";
    
    # validate accepted format to cache correct format 
    if ($http_accept ~* "application/xml") {
    	set $response_format "xml";
    }
    if ($http_accept ~* "application/json") {
    	set $response_format "json";
    }
    if ($http_accept ~* "application/yaml") {
    	set $response_format "yaml";
    }
    if ($http_accept ~* "text/plain") {
    	set $response_format "txt";
    }
    
    fastcgi_cache_key "$request_uri.$response_format";
    
    # only use for valid path prefix
    location /domain { try_files $uri @rws; }
    location /contact { try_files $uri @rws; }
    location /host { try_files $uri @rws; }
    location /registrar { try_files $uri @rws; }
    
    add_header Cache-Control public;
    add_header X-Cache-Status $upstream_cache_status;
    add_header X-Response-Format $response_format;
    
    # redirect internal to rws fcgi socket
    location @rws {
        include fastcgi_params;
    	fastcgi_keep_conn	on;
        fastcgi_param PATH_INFO $fastcgi_script_name;
        fastcgi_param SCRIPT_NAME "";
        fastcgi_pass rws_backend;
    
        fastcgi_cache RWSDNRDCACHE;
        # cache valid response for 10 minutes
        fastcgi_cache_valid   200      10m;
        # cache everything else for at least 1 minute
        fastcgi_cache_valid   any      1m;
        # cache already after 1 request
        fastcgi_cache_min_uses  1;
        # response error 500 if backend is not available
        fastcgi_cache_use_stale error  timeout invalid_header http_500;
    }
}